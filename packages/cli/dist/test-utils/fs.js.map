{"version":3,"file":"fs.js","sourceRoot":"","sources":["../../src/test-utils/fs.ts"],"names":[],"mappings":";;;AAAA,2BAAoC;AAEpC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAEhB;;;GAGG;AACI,KAAK,UAAU,eAAe;IACnC,MAAM,aAAE,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;IAE7D,6GAA6G;IAC7G,8EAA8E;IAC9E,6EAA6E;IAC7E,MAAM,aAAE,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;AACrD,CAAC;AAPD,0CAOC","sourcesContent":["import { promises as fs } from 'fs';\n\njest.mock('fs');\n\n/**\n * Clears out all the files in the in-memory file system, and writes the default\n * folders to mimic the on-disk current working directory, including sub-folders.\n */\nexport async function resetFileSystem() {\n  await fs.rm(process.cwd(), { recursive: true, force: true });\n\n  // Using relative path with memfs won't work since process.cwd() specifies the cwd of the on-disk file system\n  // This recursively creates the current working directory in the memfs volume.\n  // Ref. https://github.com/streamich/memfs/blob/master/docs/relative-paths.md\n  await fs.mkdir(process.cwd(), { recursive: true });\n}\n"]}