{"version":3,"file":"snap.js","sources":["../src/snap.ts"],"sourcesContent":["import { OnRpcRequestHandler } from '@metamask/snap-types';\n\n/**\n * Handle incoming JSON-RPC requests, sent through `wallet_invokeSnap`.\n *\n * @param args - The request handler args as object.\n * @param args.origin - The origin of the request, e.g., the website that\n * invoked the snap.\n * @param args.request - A validated JSON-RPC request object.\n * @returns `null` if the request succeeded.\n * @throws If the request method is not valid for this snap.\n * @throws If the `snap_notify` call failed.\n */\nexport const onRpcRequest: OnRpcRequestHandler = ({ origin, request }) => {\n  switch (request.method) {\n    case 'inApp':\n      return wallet.request({\n        method: 'snap_notify',\n        params: [\n          {\n            type: 'inApp',\n            message: `Hello, ${origin}!`,\n          },\n        ],\n      });\n    case 'native':\n      return wallet.request({\n        method: 'snap_notify',\n        params: [\n          {\n            type: 'native',\n            message: `Hello, ${origin}!`,\n          },\n        ],\n      });\n    default:\n      throw new Error('Method not found.');\n  }\n};\n"],"names":["onRpcRequest","origin","request","method","wallet","params","type","message","Error"],"mappings":";;;;;;AAaO,MAAMA,YAAiC,GAAG,CAAC;EAAEC,MAAF;EAAUC;AAAV,CAAD,KAAyB;EACxE,QAAQA,OAAO,CAACC,MAAhB;IACE,KAAK,OAAL;MACE,OAAOC,MAAM,CAACF,OAAPE,CAAe;QACpBD,MAAM,EAAE,aADY;QAEpBE,MAAM,EAAE,CACN;UACEC,IAAI,EAAE,OADR;UAEEC,OAAO,YAAYN,MAAO;QAF5B,CADM;MAFY,CAAfG,CAAP;;IASF,KAAK,QAAL;MACE,OAAOA,MAAM,CAACF,OAAPE,CAAe;QACpBD,MAAM,EAAE,aADY;QAEpBE,MAAM,EAAE,CACN;UACEC,IAAI,EAAE,QADR;UAEEC,OAAO,YAAYN,MAAO;QAF5B,CADM;MAFY,CAAfG,CAAP;;IASF;MACE,MAAM,IAAII,KAAJ,CAAU,mBAAV,CAAN;EAtBJ;AAwBD,CAzBM;;"}